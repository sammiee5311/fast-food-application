name: CI-CD

on: [push, pull_request]

jobs:
  machine-learning-api-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Test machine learning api
        env:
          ML_API_URL: ${{ secrets.ML_API_URL }}
          DB_FILE: ${{ secrets.ML_DB_FILE }}
          DB_TABLE: ${{ secrets.ML_DB_TABLE }}
          DB_NAME: ${{ secrets.ML_DB_NAME }}
          DB_HOST: ${{ secrets.ML_DB_HOST }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        run: make machine-learning-api

  api-server-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Test deployment
        run: make deployment

  kafka-django-test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v2

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      # - name: Install Dependencies
      #   run: make install

      # - name: Run docker compose
      #   run: make run-docker-compose

      # - name: Unittest Django
      #   env:
      #     DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      #   run: make backend-server

      # - name: Stop docker compose
      #   if: always()
      #   run: make stop-docker-compose

  tracking-server-test:
    runs-on: ubuntu-latest
    needs: [kafka-django-test, api-server-test, machine-learning-api-test]
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v2

      - name: Set up Node.js 16.x
        uses: actions/setup-node@v2.5.1
        with:
          node-version: "16"

      - name: Test Tracking server
        env:
          LOG_DIR: ${{ secrets.LOG_DIR }}
        run: make tracking

  api-server-deployment:
    runs-on: ubuntu-latest
    needs: tracking-server-test
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v2

      - name: Deploy api-server in heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "data-handling"

      - name: Slack notify
        if: always()
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_CHANNEL: dev
          SLACK_MESSAGE: "fast-food CI - ${{job.status}}"
          SLACK_USERNAME: Github Alert
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

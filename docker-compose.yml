version: "3.8"

services:
  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment: 
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    environment: 
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
     - "5050:80"

  django-backend:
    container_name: django-backend
    build: ./django
    volumes:
      - ./django:/app
    environment: 
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    depends_on:
      - postgres

  django-backend-1:
    container_name: django-backend-1
    build: ./django
    volumes:
      - ./django:/app
    environment: 
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
    command: ["python", "manage.py", "runserver", "0.0.0.0:8001"]
    depends_on:
      - postgres

  django-backend-2:
    container_name: django-backend-2
    build: ./django
    volumes:
      - ./django:/app
    environment: 
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
    command: ["python", "manage.py", "runserver", "0.0.0.0:8002"]
    depends_on:
      - postgres
  
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    volumes:
      - ./id-generator/config/redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]

  id-generator:
    container_name: id-generator
    build: ./id-generator
    volumes:
      - ./id-generator:/app
    command: ["python", "main.py"]
    depends_on:
      - redis
  
  frontend-react:
    container_name: frontend-react
    build: ./react
    volumes:
      - frontendVol:/app/build
    command: ["npm", "start"]

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    volumes:
      - mongodata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MG_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MG_PASSWORD}
    depends_on:
      - django-backend
    
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: ${MG_EXPRESS_SERVER}
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MG_EXPRESS_ADMIN_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MG_EXPRESS_ADMIN_PASSWORD}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
    depends_on:
      - mongo

  tracking:
    container_name: tracking
    build: ./tracking
    volumes:
      - ./tracking:/app
    command: ["npm", "start"]
    depends_on:
      - mongo

  nginx-proxy:
    container_name: nginx-proxy
    restart: always
    build: ./nginx
    volumes:
      - frontendVol:/var/www/fastfoodapp
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - mongo
  
  order-delivery-time-handler:
    container_name: order-delivery-time-handler
    build: ./order-delivery-time-handler
    volumes:
      - ./order-delivery-time-handler:/app
    command: ["python", "main.py"]
    depends_on:
      - django-backend

networks:
  default:
    external:
      name: fast-food-application

volumes: 
  pgdata:
  mongodata:
  frontendVol: